name = "Delete namespace"
default_guided_failure_mode = "EnvironmentDefault"
description = "Delete the namespace to reset."

connectivity_policy {
    allow_deployments_to_no_targets = true
}

run_retention_policy {
    quantity_to_keep = 3
}

process {
    step "delete-namespace" {
        name = "Delete namespace"
        properties = {
            Octopus.Action.TargetRoles = "octopub"
        }

        action {
            action_type = "Octopus.KubernetesRunScript"
            properties = {
                Octopus.Action.Script.ScriptBody = <<-EOT
                    # Set varaibles
                    $clusterNamespace = $OctopusParameters["Project.Cluster.Namespace"]
                    
                    # Get existing namespaces
                    Write-Host "Retrieving namespaces ..."
                    $namespaces = (kubectl get namespaces -o JSON | ConvertFrom-Json)
                    
                    # Check to see if namespace exists
                    if ($null -eq ($namespaces.Items | Where-Object {$_.metadata.name -eq $clusterNamespace}))
                    {
                    	# Create the namespace
                        Write-Host "Namespace $clusetrNamespace doesn't exist ..."
                    }
                    else
                    {
                    	Write-Host "Deleting namespace ..."
                        kubectl delete namespace $clusterNamespace
                    }
                    EOT
                Octopus.Action.Script.ScriptSource = "Inline"
                Octopus.Action.Script.Syntax = "PowerShell"
            }
            worker_pool_variable = "Project.Worker.Pool"
        }
    }
}